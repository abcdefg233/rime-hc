# 引用通用配置文件：
__include: ts__detail.yaml:/
# 引用特殊配置文件：
__include: _schema_settings/ts_zm_double.yaml:/map
switches: {__include: _schema_settings/ts_zm_double.yaml:/switches}
# 引用方案快捷键：
__patch:
 key_binder/bindings/+: {__include: _schema_settings/ts_zm_double.yaml:/array/bindings}
schema:
 __include: _schema_settings/_global:/schema
 __patch:
  author/@before 0: 郑易里
 schema_id: ts_zm_double
 name: 『郑码双拼』
 description: |
  蹄垫系列方案之郑码双拼
  基于郑码, 允许两码一字造长句
__patch:
 schema/dependencies/+:
  - ts_cn_quanpin # 英文
  - ts_en # 英文
  - module_jian_zm
__patch:
 - engine/processors/@after 6:      "lua_processor@reverse_pro"
 - engine/processors/@after 6:      "lua_processor@quick_wrap"
 - engine/processors/@after 6:      "lua_processor@select_char"
 - engine/segmentors/@after 1:      "affix_segmentor@module_fnua_zm"
 - engine/translators/@before last: "lua_translator@module_fnua_zm"
 - engine/translators/@after last:  "lua_translator@ts_zm_double@translator"
 - engine/translators/@after last:  "table_translator@module_jian_zm"
 - engine/translators/@after last:  "lua_translator@ts_en@module_en"
 - engine/translators/@after last:  "lua_translator@recorder"
 - ts_zm_double.custom:/patch?
abc_segmentor: {extra_tags: [ts_en, abc]}
module_fnua_zm: {dictionary: ts_cn, enable_user_dict: false, tag: module_fnua_zm, prefix: "`", tips: 〔拆字〕}
module_jian_zm: {dictionary: module_jian_zm, enable_completion: false, enable_user_dict: false, enable_sentence: false, initial_quality: 99}
translator: {initial_quality: 1, dictionary: ts_zm_double, enable_user_dict: true, comment_format: ['xform/~//']}
module_en: {__include: ts_en.schema.yaml:/translator, tag: ts_en}
recognizer:
 lua:
  reverse_pro: '`'
 patterns:
  module_fnua_zm: "`[^0-9]*$"
speller:
 alphabet: "zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA-=|"
 initials: "zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA"
 algebra:
  - fuzz/(?<=^[a-z][a-z][a-z]).+$//
  - fuzz/(?<=^[a-z][a-z]).+$//
  - derive/^[a-z]$/$0$0/